import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { IoTServiceException as __BaseException } from "./IoTServiceException";
export class DeleteConflictException extends __BaseException {
    name = "DeleteConflictException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "DeleteConflictException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, DeleteConflictException.prototype);
    }
}
export class CertificateStateException extends __BaseException {
    name = "CertificateStateException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "CertificateStateException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, CertificateStateException.prototype);
    }
}
export const LogTargetType = {
    CLIENT_ID: "CLIENT_ID",
    DEFAULT: "DEFAULT",
    PRINCIPAL_ID: "PRINCIPAL_ID",
    SOURCE_IP: "SOURCE_IP",
    THING_GROUP: "THING_GROUP",
};
export const CertificateMode = {
    DEFAULT: "DEFAULT",
    SNI_ONLY: "SNI_ONLY",
};
export const CACertificateStatus = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
};
export const CertificateStatus = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
    PENDING_ACTIVATION: "PENDING_ACTIVATION",
    PENDING_TRANSFER: "PENDING_TRANSFER",
    REGISTER_INACTIVE: "REGISTER_INACTIVE",
    REVOKED: "REVOKED",
};
export const DetectMitigationActionsTaskStatus = {
    CANCELED: "CANCELED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    SUCCESSFUL: "SUCCESSFUL",
};
export const DomainConfigurationStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const DomainType = {
    AWS_MANAGED: "AWS_MANAGED",
    CUSTOMER_MANAGED: "CUSTOMER_MANAGED",
    ENDPOINT: "ENDPOINT",
};
export const ServerCertificateStatus = {
    INVALID: "INVALID",
    VALID: "VALID",
};
export const ConfigurationStatus = {
    HEALTHY: "HEALTHY",
    UNHEALTHY: "UNHEALTHY",
};
export const EncryptionType = {
    AWS_OWNED_KMS_KEY: "AWS_OWNED_KMS_KEY",
    CUSTOMER_MANAGED_KMS_KEY: "CUSTOMER_MANAGED_KMS_KEY",
};
export const EventType = {
    CA_CERTIFICATE: "CA_CERTIFICATE",
    CERTIFICATE: "CERTIFICATE",
    JOB: "JOB",
    JOB_EXECUTION: "JOB_EXECUTION",
    POLICY: "POLICY",
    THING: "THING",
    THING_GROUP: "THING_GROUP",
    THING_GROUP_HIERARCHY: "THING_GROUP_HIERARCHY",
    THING_GROUP_MEMBERSHIP: "THING_GROUP_MEMBERSHIP",
    THING_TYPE: "THING_TYPE",
    THING_TYPE_ASSOCIATION: "THING_TYPE_ASSOCIATION",
};
export const IndexStatus = {
    ACTIVE: "ACTIVE",
    BUILDING: "BUILDING",
    REBUILDING: "REBUILDING",
};
export const JobStatus = {
    CANCELED: "CANCELED",
    COMPLETED: "COMPLETED",
    DELETION_IN_PROGRESS: "DELETION_IN_PROGRESS",
    IN_PROGRESS: "IN_PROGRESS",
    SCHEDULED: "SCHEDULED",
};
export const JobExecutionStatus = {
    CANCELED: "CANCELED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    QUEUED: "QUEUED",
    REJECTED: "REJECTED",
    REMOVED: "REMOVED",
    SUCCEEDED: "SUCCEEDED",
    TIMED_OUT: "TIMED_OUT",
};
export const MitigationActionType = {
    ADD_THINGS_TO_THING_GROUP: "ADD_THINGS_TO_THING_GROUP",
    ENABLE_IOT_LOGGING: "ENABLE_IOT_LOGGING",
    PUBLISH_FINDING_TO_SNS: "PUBLISH_FINDING_TO_SNS",
    REPLACE_DEFAULT_POLICY_VERSION: "REPLACE_DEFAULT_POLICY_VERSION",
    UPDATE_CA_CERTIFICATE: "UPDATE_CA_CERTIFICATE",
    UPDATE_DEVICE_CERTIFICATE: "UPDATE_DEVICE_CERTIFICATE",
};
export const DynamicGroupStatus = {
    ACTIVE: "ACTIVE",
    BUILDING: "BUILDING",
    REBUILDING: "REBUILDING",
};
export const Status = {
    Cancelled: "Cancelled",
    Cancelling: "Cancelling",
    Completed: "Completed",
    Failed: "Failed",
    InProgress: "InProgress",
};
export const ModelStatus = {
    ACTIVE: "ACTIVE",
    EXPIRED: "EXPIRED",
    PENDING_BUILD: "PENDING_BUILD",
};
export const CommandExecutionStatus = {
    CREATED: "CREATED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    REJECTED: "REJECTED",
    SUCCEEDED: "SUCCEEDED",
    TIMED_OUT: "TIMED_OUT",
};
export const FieldType = {
    BOOLEAN: "Boolean",
    NUMBER: "Number",
    STRING: "String",
};
export const ThingGroupIndexingMode = {
    OFF: "OFF",
    ON: "ON",
};
export const DeviceDefenderIndexingMode = {
    OFF: "OFF",
    VIOLATIONS: "VIOLATIONS",
};
export const TargetFieldOrder = {
    LatLon: "LatLon",
    LonLat: "LonLat",
};
export const NamedShadowIndexingMode = {
    OFF: "OFF",
    ON: "ON",
};
export const ThingConnectivityIndexingMode = {
    OFF: "OFF",
    STATUS: "STATUS",
};
export const ThingIndexingMode = {
    OFF: "OFF",
    REGISTRY: "REGISTRY",
    REGISTRY_AND_SHADOW: "REGISTRY_AND_SHADOW",
};
export const DisconnectReasonValue = {
    AUTH_ERROR: "AUTH_ERROR",
    CLIENT_ERROR: "CLIENT_ERROR",
    CLIENT_INITIATED_DISCONNECT: "CLIENT_INITIATED_DISCONNECT",
    CONNECTION_LOST: "CONNECTION_LOST",
    CUSTOMAUTH_TTL_EXPIRATION: "CUSTOMAUTH_TTL_EXPIRATION",
    DUPLICATE_CLIENTID: "DUPLICATE_CLIENTID",
    FORBIDDEN_ACCESS: "FORBIDDEN_ACCESS",
    MQTT_KEEP_ALIVE_TIMEOUT: "MQTT_KEEP_ALIVE_TIMEOUT",
    NONE: "NONE",
    SERVER_ERROR: "SERVER_ERROR",
    SERVER_INITIATED_DISCONNECT: "SERVER_INITIATED_DISCONNECT",
    THROTTLED: "THROTTLED",
    UNKNOWN: "UNKNOWN",
    WEBSOCKET_TTL_EXPIRATION: "WEBSOCKET_TTL_EXPIRATION",
};
export class NotConfiguredException extends __BaseException {
    name = "NotConfiguredException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NotConfiguredException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotConfiguredException.prototype);
    }
}
export const BehaviorCriteriaType = {
    MACHINE_LEARNING: "MACHINE_LEARNING",
    STATIC: "STATIC",
    STATISTICAL: "STATISTICAL",
};
export const SortOrder = {
    Ascending: "ASCENDING",
    Descending: "DESCENDING",
};
export const GetPackageResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const GetPackageVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.attributes && { attributes: SENSITIVE_STRING }),
    ...(obj.recipe && { recipe: SENSITIVE_STRING }),
});
export const GetThingConnectivityDataRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.thingName && { thingName: SENSITIVE_STRING }),
});
export const GetThingConnectivityDataResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.thingName && { thingName: SENSITIVE_STRING }),
});
