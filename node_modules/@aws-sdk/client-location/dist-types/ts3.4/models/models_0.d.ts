import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { LocationServiceException as __BaseException } from "./LocationServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export type Status = "Active" | "Expired";
export interface ApiKeyFilter {
  KeyStatus?: Status | undefined;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface ApiKeyRestrictions {
  AllowActions: string[] | undefined;
  AllowResources: string[] | undefined;
  AllowReferers?: string[] | undefined;
}
export interface CreateKeyRequest {
  KeyName: string | undefined;
  Restrictions: ApiKeyRestrictions | undefined;
  Description?: string | undefined;
  ExpireTime?: Date | undefined;
  NoExpiry?: boolean | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateKeyResponse {
  Key: string | undefined;
  KeyArn: string | undefined;
  KeyName: string | undefined;
  CreateTime: Date | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  $retryable: {};
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  $retryable: {};
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface ValidationExceptionField {
  Name: string | undefined;
  Message: string | undefined;
}
export type ValidationExceptionReason =
  | "CannotParse"
  | "FieldValidationFailed"
  | "Missing"
  | "Other"
  | "UnknownField"
  | "UnknownOperation";
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  Reason: ValidationExceptionReason | undefined;
  FieldList: ValidationExceptionField[] | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface DeleteKeyRequest {
  KeyName: string | undefined;
  ForceDelete?: boolean | undefined;
}
export interface DeleteKeyResponse {}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DescribeKeyRequest {
  KeyName: string | undefined;
}
export interface DescribeKeyResponse {
  Key: string | undefined;
  KeyArn: string | undefined;
  KeyName: string | undefined;
  Restrictions: ApiKeyRestrictions | undefined;
  CreateTime: Date | undefined;
  ExpireTime: Date | undefined;
  UpdateTime: Date | undefined;
  Description?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface ListKeysRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  Filter?: ApiKeyFilter | undefined;
}
export interface ListKeysResponseEntry {
  KeyName: string | undefined;
  ExpireTime: Date | undefined;
  Description?: string | undefined;
  Restrictions: ApiKeyRestrictions | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListKeysResponse {
  Entries: ListKeysResponseEntry[] | undefined;
  NextToken?: string | undefined;
}
export interface UpdateKeyRequest {
  KeyName: string | undefined;
  Description?: string | undefined;
  ExpireTime?: Date | undefined;
  NoExpiry?: boolean | undefined;
  ForceUpdate?: boolean | undefined;
  Restrictions?: ApiKeyRestrictions | undefined;
}
export interface UpdateKeyResponse {
  KeyArn: string | undefined;
  KeyName: string | undefined;
  UpdateTime: Date | undefined;
}
export interface AssociateTrackerConsumerRequest {
  TrackerName: string | undefined;
  ConsumerArn: string | undefined;
}
export interface AssociateTrackerConsumerResponse {}
export interface BatchDeleteDevicePositionHistoryRequest {
  TrackerName: string | undefined;
  DeviceIds: string[] | undefined;
}
export type BatchItemErrorCode =
  | "AccessDeniedError"
  | "ConflictError"
  | "InternalServerError"
  | "ResourceNotFoundError"
  | "ThrottlingError"
  | "ValidationError";
export interface BatchItemError {
  Code?: BatchItemErrorCode | undefined;
  Message?: string | undefined;
}
export interface BatchDeleteDevicePositionHistoryError {
  DeviceId: string | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchDeleteDevicePositionHistoryResponse {
  Errors: BatchDeleteDevicePositionHistoryError[] | undefined;
}
export interface BatchDeleteGeofenceRequest {
  CollectionName: string | undefined;
  GeofenceIds: string[] | undefined;
}
export interface BatchDeleteGeofenceError {
  GeofenceId: string | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchDeleteGeofenceResponse {
  Errors: BatchDeleteGeofenceError[] | undefined;
}
export interface PositionalAccuracy {
  Horizontal: number | undefined;
}
export interface DevicePositionUpdate {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy | undefined;
  PositionProperties?: Record<string, string> | undefined;
}
export interface BatchEvaluateGeofencesRequest {
  CollectionName: string | undefined;
  DevicePositionUpdates: DevicePositionUpdate[] | undefined;
}
export interface BatchEvaluateGeofencesError {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchEvaluateGeofencesResponse {
  Errors: BatchEvaluateGeofencesError[] | undefined;
}
export interface BatchGetDevicePositionRequest {
  TrackerName: string | undefined;
  DeviceIds: string[] | undefined;
}
export interface DevicePosition {
  DeviceId?: string | undefined;
  SampleTime: Date | undefined;
  ReceivedTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy | undefined;
  PositionProperties?: Record<string, string> | undefined;
}
export interface BatchGetDevicePositionError {
  DeviceId: string | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchGetDevicePositionResponse {
  Errors: BatchGetDevicePositionError[] | undefined;
  DevicePositions: DevicePosition[] | undefined;
}
export interface Circle {
  Center: number[] | undefined;
  Radius: number | undefined;
}
export interface GeofenceGeometry {
  Polygon?: number[][][] | undefined;
  Circle?: Circle | undefined;
  Geobuf?: Uint8Array | undefined;
  MultiPolygon?: number[][][][] | undefined;
}
export interface BatchPutGeofenceRequestEntry {
  GeofenceId: string | undefined;
  Geometry: GeofenceGeometry | undefined;
  GeofenceProperties?: Record<string, string> | undefined;
}
export interface BatchPutGeofenceRequest {
  CollectionName: string | undefined;
  Entries: BatchPutGeofenceRequestEntry[] | undefined;
}
export interface BatchPutGeofenceError {
  GeofenceId: string | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchPutGeofenceSuccess {
  GeofenceId: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface BatchPutGeofenceResponse {
  Successes: BatchPutGeofenceSuccess[] | undefined;
  Errors: BatchPutGeofenceError[] | undefined;
}
export interface BatchUpdateDevicePositionRequest {
  TrackerName: string | undefined;
  Updates: DevicePositionUpdate[] | undefined;
}
export interface BatchUpdateDevicePositionError {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Error: BatchItemError | undefined;
}
export interface BatchUpdateDevicePositionResponse {
  Errors: BatchUpdateDevicePositionError[] | undefined;
}
export interface CalculateRouteCarModeOptions {
  AvoidFerries?: boolean | undefined;
  AvoidTolls?: boolean | undefined;
}
export type DistanceUnit = "Kilometers" | "Miles";
export type OptimizationMode = "FastestRoute" | "ShortestRoute";
export type TravelMode = "Bicycle" | "Car" | "Motorcycle" | "Truck" | "Walking";
export type DimensionUnit = "Feet" | "Meters";
export interface TruckDimensions {
  Length?: number | undefined;
  Height?: number | undefined;
  Width?: number | undefined;
  Unit?: DimensionUnit | undefined;
}
export type VehicleWeightUnit = "Kilograms" | "Pounds";
export interface TruckWeight {
  Total?: number | undefined;
  Unit?: VehicleWeightUnit | undefined;
}
export interface CalculateRouteTruckModeOptions {
  AvoidFerries?: boolean | undefined;
  AvoidTolls?: boolean | undefined;
  Dimensions?: TruckDimensions | undefined;
  Weight?: TruckWeight | undefined;
}
export interface CalculateRouteRequest {
  CalculatorName: string | undefined;
  DeparturePosition: number[] | undefined;
  DestinationPosition: number[] | undefined;
  WaypointPositions?: number[][] | undefined;
  TravelMode?: TravelMode | undefined;
  DepartureTime?: Date | undefined;
  DepartNow?: boolean | undefined;
  DistanceUnit?: DistanceUnit | undefined;
  IncludeLegGeometry?: boolean | undefined;
  CarModeOptions?: CalculateRouteCarModeOptions | undefined;
  TruckModeOptions?: CalculateRouteTruckModeOptions | undefined;
  ArrivalTime?: Date | undefined;
  OptimizeFor?: OptimizationMode | undefined;
  Key?: string | undefined;
}
export interface LegGeometry {
  LineString?: number[][] | undefined;
}
export interface Step {
  StartPosition: number[] | undefined;
  EndPosition: number[] | undefined;
  Distance: number | undefined;
  DurationSeconds: number | undefined;
  GeometryOffset?: number | undefined;
}
export interface Leg {
  StartPosition: number[] | undefined;
  EndPosition: number[] | undefined;
  Distance: number | undefined;
  DurationSeconds: number | undefined;
  Geometry?: LegGeometry | undefined;
  Steps: Step[] | undefined;
}
export interface CalculateRouteSummary {
  RouteBBox: number[] | undefined;
  DataSource: string | undefined;
  Distance: number | undefined;
  DurationSeconds: number | undefined;
  DistanceUnit: DistanceUnit | undefined;
}
export interface CalculateRouteResponse {
  Legs: Leg[] | undefined;
  Summary: CalculateRouteSummary | undefined;
}
export interface CalculateRouteMatrixRequest {
  CalculatorName: string | undefined;
  DeparturePositions: number[][] | undefined;
  DestinationPositions: number[][] | undefined;
  TravelMode?: TravelMode | undefined;
  DepartureTime?: Date | undefined;
  DepartNow?: boolean | undefined;
  DistanceUnit?: DistanceUnit | undefined;
  CarModeOptions?: CalculateRouteCarModeOptions | undefined;
  TruckModeOptions?: CalculateRouteTruckModeOptions | undefined;
  Key?: string | undefined;
}
export type RouteMatrixErrorCode =
  | "DeparturePositionNotFound"
  | "DestinationPositionNotFound"
  | "OtherValidationError"
  | "PositionsNotFound"
  | "RouteNotFound"
  | "RouteTooLong";
export interface RouteMatrixEntryError {
  Code: RouteMatrixErrorCode | undefined;
  Message?: string | undefined;
}
export interface RouteMatrixEntry {
  Distance?: number | undefined;
  DurationSeconds?: number | undefined;
  Error?: RouteMatrixEntryError | undefined;
}
export interface CalculateRouteMatrixSummary {
  DataSource: string | undefined;
  RouteCount: number | undefined;
  ErrorCount: number | undefined;
  DistanceUnit: DistanceUnit | undefined;
}
export interface CalculateRouteMatrixResponse {
  RouteMatrix: RouteMatrixEntry[][] | undefined;
  SnappedDeparturePositions?: number[][] | undefined;
  SnappedDestinationPositions?: number[][] | undefined;
  Summary: CalculateRouteMatrixSummary | undefined;
}
export interface LteLocalId {
  Earfcn: number | undefined;
  Pci: number | undefined;
}
export interface LteNetworkMeasurements {
  Earfcn: number | undefined;
  CellId: number | undefined;
  Pci: number | undefined;
  Rsrp?: number | undefined;
  Rsrq?: number | undefined;
}
export interface LteCellDetails {
  CellId: number | undefined;
  Mcc: number | undefined;
  Mnc: number | undefined;
  LocalId?: LteLocalId | undefined;
  NetworkMeasurements?: LteNetworkMeasurements[] | undefined;
  TimingAdvance?: number | undefined;
  NrCapable?: boolean | undefined;
  Rsrp?: number | undefined;
  Rsrq?: number | undefined;
  Tac?: number | undefined;
}
export interface CellSignals {
  LteCellDetails: LteCellDetails[] | undefined;
}
export type PricingPlan =
  | "MobileAssetManagement"
  | "MobileAssetTracking"
  | "RequestBasedUsage";
export interface CreateGeofenceCollectionRequest {
  CollectionName: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  PricingPlanDataSource?: string | undefined;
  Description?: string | undefined;
  Tags?: Record<string, string> | undefined;
  KmsKeyId?: string | undefined;
}
export interface CreateGeofenceCollectionResponse {
  CollectionName: string | undefined;
  CollectionArn: string | undefined;
  CreateTime: Date | undefined;
}
export interface MapConfiguration {
  Style: string | undefined;
  PoliticalView?: string | undefined;
  CustomLayers?: string[] | undefined;
}
export interface CreateMapRequest {
  MapName: string | undefined;
  Configuration: MapConfiguration | undefined;
  PricingPlan?: PricingPlan | undefined;
  Description?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateMapResponse {
  MapName: string | undefined;
  MapArn: string | undefined;
  CreateTime: Date | undefined;
}
export type IntendedUse = "SingleUse" | "Storage";
export interface DataSourceConfiguration {
  IntendedUse?: IntendedUse | undefined;
}
export interface CreatePlaceIndexRequest {
  IndexName: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  Description?: string | undefined;
  DataSourceConfiguration?: DataSourceConfiguration | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreatePlaceIndexResponse {
  IndexName: string | undefined;
  IndexArn: string | undefined;
  CreateTime: Date | undefined;
}
export interface CreateRouteCalculatorRequest {
  CalculatorName: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  Description?: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateRouteCalculatorResponse {
  CalculatorName: string | undefined;
  CalculatorArn: string | undefined;
  CreateTime: Date | undefined;
}
export type PositionFiltering = "AccuracyBased" | "DistanceBased" | "TimeBased";
export interface CreateTrackerRequest {
  TrackerName: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  KmsKeyId?: string | undefined;
  PricingPlanDataSource?: string | undefined;
  Description?: string | undefined;
  Tags?: Record<string, string> | undefined;
  PositionFiltering?: PositionFiltering | undefined;
  EventBridgeEnabled?: boolean | undefined;
  KmsKeyEnableGeospatialQueries?: boolean | undefined;
}
export interface CreateTrackerResponse {
  TrackerName: string | undefined;
  TrackerArn: string | undefined;
  CreateTime: Date | undefined;
}
export interface DeleteGeofenceCollectionRequest {
  CollectionName: string | undefined;
}
export interface DeleteGeofenceCollectionResponse {}
export interface DeleteMapRequest {
  MapName: string | undefined;
}
export interface DeleteMapResponse {}
export interface DeletePlaceIndexRequest {
  IndexName: string | undefined;
}
export interface DeletePlaceIndexResponse {}
export interface DeleteRouteCalculatorRequest {
  CalculatorName: string | undefined;
}
export interface DeleteRouteCalculatorResponse {}
export interface DeleteTrackerRequest {
  TrackerName: string | undefined;
}
export interface DeleteTrackerResponse {}
export interface DescribeGeofenceCollectionRequest {
  CollectionName: string | undefined;
}
export interface DescribeGeofenceCollectionResponse {
  CollectionName: string | undefined;
  CollectionArn: string | undefined;
  Description: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  PricingPlanDataSource?: string | undefined;
  KmsKeyId?: string | undefined;
  Tags?: Record<string, string> | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  GeofenceCount?: number | undefined;
}
export interface DescribeMapRequest {
  MapName: string | undefined;
}
export interface DescribeMapResponse {
  MapName: string | undefined;
  MapArn: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  DataSource: string | undefined;
  Configuration: MapConfiguration | undefined;
  Description: string | undefined;
  Tags?: Record<string, string> | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface DescribePlaceIndexRequest {
  IndexName: string | undefined;
}
export interface DescribePlaceIndexResponse {
  IndexName: string | undefined;
  IndexArn: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  Description: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  DataSource: string | undefined;
  DataSourceConfiguration: DataSourceConfiguration | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface DescribeRouteCalculatorRequest {
  CalculatorName: string | undefined;
}
export interface DescribeRouteCalculatorResponse {
  CalculatorName: string | undefined;
  CalculatorArn: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  Description: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  DataSource: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface DescribeTrackerRequest {
  TrackerName: string | undefined;
}
export interface DescribeTrackerResponse {
  TrackerName: string | undefined;
  TrackerArn: string | undefined;
  Description: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  PricingPlanDataSource?: string | undefined;
  Tags?: Record<string, string> | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  KmsKeyId?: string | undefined;
  PositionFiltering?: PositionFiltering | undefined;
  EventBridgeEnabled?: boolean | undefined;
  KmsKeyEnableGeospatialQueries?: boolean | undefined;
}
export interface WiFiAccessPoint {
  MacAddress: string | undefined;
  Rss: number | undefined;
}
export interface DeviceState {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy | undefined;
  Ipv4Address?: string | undefined;
  WiFiAccessPoints?: WiFiAccessPoint[] | undefined;
  CellSignals?: CellSignals | undefined;
}
export interface DisassociateTrackerConsumerRequest {
  TrackerName: string | undefined;
  ConsumerArn: string | undefined;
}
export interface DisassociateTrackerConsumerResponse {}
export type ForecastedGeofenceEventType = "ENTER" | "EXIT" | "IDLE";
export interface ForecastedEvent {
  EventId: string | undefined;
  GeofenceId: string | undefined;
  IsDeviceInGeofence: boolean | undefined;
  NearestDistance: number | undefined;
  EventType: ForecastedGeofenceEventType | undefined;
  ForecastedBreachTime?: Date | undefined;
  GeofenceProperties?: Record<string, string> | undefined;
}
export interface ForecastGeofenceEventsDeviceState {
  Position: number[] | undefined;
  Speed?: number | undefined;
}
export type SpeedUnit = "KilometersPerHour" | "MilesPerHour";
export interface ForecastGeofenceEventsRequest {
  CollectionName: string | undefined;
  DeviceState: ForecastGeofenceEventsDeviceState | undefined;
  TimeHorizonMinutes?: number | undefined;
  DistanceUnit?: DistanceUnit | undefined;
  SpeedUnit?: SpeedUnit | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ForecastGeofenceEventsResponse {
  ForecastedEvents: ForecastedEvent[] | undefined;
  NextToken?: string | undefined;
  DistanceUnit: DistanceUnit | undefined;
  SpeedUnit: SpeedUnit | undefined;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string> | undefined;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface GetGeofenceRequest {
  CollectionName: string | undefined;
  GeofenceId: string | undefined;
}
export interface GetGeofenceResponse {
  GeofenceId: string | undefined;
  Geometry: GeofenceGeometry | undefined;
  Status: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  GeofenceProperties?: Record<string, string> | undefined;
}
export interface ListGeofenceCollectionsRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListGeofenceCollectionsResponseEntry {
  CollectionName: string | undefined;
  Description: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  PricingPlanDataSource?: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListGeofenceCollectionsResponse {
  Entries: ListGeofenceCollectionsResponseEntry[] | undefined;
  NextToken?: string | undefined;
}
export interface ListGeofencesRequest {
  CollectionName: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListGeofenceResponseEntry {
  GeofenceId: string | undefined;
  Geometry: GeofenceGeometry | undefined;
  Status: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
  GeofenceProperties?: Record<string, string> | undefined;
}
export interface ListGeofencesResponse {
  Entries: ListGeofenceResponseEntry[] | undefined;
  NextToken?: string | undefined;
}
export interface PutGeofenceRequest {
  CollectionName: string | undefined;
  GeofenceId: string | undefined;
  Geometry: GeofenceGeometry | undefined;
  GeofenceProperties?: Record<string, string> | undefined;
}
export interface PutGeofenceResponse {
  GeofenceId: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface UpdateGeofenceCollectionRequest {
  CollectionName: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  PricingPlanDataSource?: string | undefined;
  Description?: string | undefined;
}
export interface UpdateGeofenceCollectionResponse {
  CollectionName: string | undefined;
  CollectionArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface GetDevicePositionRequest {
  TrackerName: string | undefined;
  DeviceId: string | undefined;
}
export interface GetDevicePositionResponse {
  DeviceId?: string | undefined;
  SampleTime: Date | undefined;
  ReceivedTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy | undefined;
  PositionProperties?: Record<string, string> | undefined;
}
export interface GetDevicePositionHistoryRequest {
  TrackerName: string | undefined;
  DeviceId: string | undefined;
  NextToken?: string | undefined;
  StartTimeInclusive?: Date | undefined;
  EndTimeExclusive?: Date | undefined;
  MaxResults?: number | undefined;
}
export interface GetDevicePositionHistoryResponse {
  DevicePositions: DevicePosition[] | undefined;
  NextToken?: string | undefined;
}
export interface GetMapGlyphsRequest {
  MapName: string | undefined;
  FontStack: string | undefined;
  FontUnicodeRange: string | undefined;
  Key?: string | undefined;
}
export interface GetMapGlyphsResponse {
  Blob?: Uint8Array | undefined;
  ContentType?: string | undefined;
  CacheControl?: string | undefined;
}
export interface GetMapSpritesRequest {
  MapName: string | undefined;
  FileName: string | undefined;
  Key?: string | undefined;
}
export interface GetMapSpritesResponse {
  Blob?: Uint8Array | undefined;
  ContentType?: string | undefined;
  CacheControl?: string | undefined;
}
export interface GetMapStyleDescriptorRequest {
  MapName: string | undefined;
  Key?: string | undefined;
}
export interface GetMapStyleDescriptorResponse {
  Blob?: Uint8Array | undefined;
  ContentType?: string | undefined;
  CacheControl?: string | undefined;
}
export interface GetMapTileRequest {
  MapName: string | undefined;
  Z: string | undefined;
  X: string | undefined;
  Y: string | undefined;
  Key?: string | undefined;
}
export interface GetMapTileResponse {
  Blob?: Uint8Array | undefined;
  ContentType?: string | undefined;
  CacheControl?: string | undefined;
}
export interface GetPlaceRequest {
  IndexName: string | undefined;
  PlaceId: string | undefined;
  Language?: string | undefined;
  Key?: string | undefined;
}
export interface PlaceGeometry {
  Point?: number[] | undefined;
}
export interface TimeZone {
  Name: string | undefined;
  Offset?: number | undefined;
}
export interface Place {
  Label?: string | undefined;
  Geometry: PlaceGeometry | undefined;
  AddressNumber?: string | undefined;
  Street?: string | undefined;
  Neighborhood?: string | undefined;
  Municipality?: string | undefined;
  SubRegion?: string | undefined;
  Region?: string | undefined;
  Country?: string | undefined;
  PostalCode?: string | undefined;
  Interpolated?: boolean | undefined;
  TimeZone?: TimeZone | undefined;
  UnitType?: string | undefined;
  UnitNumber?: string | undefined;
  Categories?: string[] | undefined;
  SupplementalCategories?: string[] | undefined;
  SubMunicipality?: string | undefined;
}
export interface GetPlaceResponse {
  Place: Place | undefined;
}
export interface InferredState {
  Position?: number[] | undefined;
  Accuracy?: PositionalAccuracy | undefined;
  DeviationDistance?: number | undefined;
  ProxyDetected: boolean | undefined;
}
export interface TrackingFilterGeometry {
  Polygon?: number[][][] | undefined;
}
export interface ListDevicePositionsRequest {
  TrackerName: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  FilterGeometry?: TrackingFilterGeometry | undefined;
}
export interface ListDevicePositionsResponseEntry {
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  Position: number[] | undefined;
  Accuracy?: PositionalAccuracy | undefined;
  PositionProperties?: Record<string, string> | undefined;
}
export interface ListDevicePositionsResponse {
  Entries: ListDevicePositionsResponseEntry[] | undefined;
  NextToken?: string | undefined;
}
export interface ListMapsRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListMapsResponseEntry {
  MapName: string | undefined;
  Description: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListMapsResponse {
  Entries: ListMapsResponseEntry[] | undefined;
  NextToken?: string | undefined;
}
export interface ListPlaceIndexesRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListPlaceIndexesResponseEntry {
  IndexName: string | undefined;
  Description: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListPlaceIndexesResponse {
  Entries: ListPlaceIndexesResponseEntry[] | undefined;
  NextToken?: string | undefined;
}
export interface ListRouteCalculatorsRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListRouteCalculatorsResponseEntry {
  CalculatorName: string | undefined;
  Description: string | undefined;
  DataSource: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListRouteCalculatorsResponse {
  Entries: ListRouteCalculatorsResponseEntry[] | undefined;
  NextToken?: string | undefined;
}
export interface ListTrackerConsumersRequest {
  TrackerName: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListTrackerConsumersResponse {
  ConsumerArns: string[] | undefined;
  NextToken?: string | undefined;
}
export interface ListTrackersRequest {
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListTrackersResponseEntry {
  TrackerName: string | undefined;
  Description: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  PricingPlanDataSource?: string | undefined;
  CreateTime: Date | undefined;
  UpdateTime: Date | undefined;
}
export interface ListTrackersResponse {
  Entries: ListTrackersResponseEntry[] | undefined;
  NextToken?: string | undefined;
}
export interface MapConfigurationUpdate {
  PoliticalView?: string | undefined;
  CustomLayers?: string[] | undefined;
}
export interface UpdateMapRequest {
  MapName: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  Description?: string | undefined;
  ConfigurationUpdate?: MapConfigurationUpdate | undefined;
}
export interface UpdateMapResponse {
  MapName: string | undefined;
  MapArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface SearchPlaceIndexForPositionRequest {
  IndexName: string | undefined;
  Position: number[] | undefined;
  MaxResults?: number | undefined;
  Language?: string | undefined;
  Key?: string | undefined;
}
export interface SearchForPositionResult {
  Place: Place | undefined;
  Distance: number | undefined;
  PlaceId?: string | undefined;
}
export interface SearchPlaceIndexForPositionSummary {
  Position: number[] | undefined;
  MaxResults?: number | undefined;
  DataSource: string | undefined;
  Language?: string | undefined;
}
export interface SearchPlaceIndexForPositionResponse {
  Summary: SearchPlaceIndexForPositionSummary | undefined;
  Results: SearchForPositionResult[] | undefined;
}
export interface SearchPlaceIndexForSuggestionsRequest {
  IndexName: string | undefined;
  Text: string | undefined;
  BiasPosition?: number[] | undefined;
  FilterBBox?: number[] | undefined;
  FilterCountries?: string[] | undefined;
  MaxResults?: number | undefined;
  Language?: string | undefined;
  FilterCategories?: string[] | undefined;
  Key?: string | undefined;
}
export interface SearchForSuggestionsResult {
  Text: string | undefined;
  PlaceId?: string | undefined;
  Categories?: string[] | undefined;
  SupplementalCategories?: string[] | undefined;
}
export interface SearchPlaceIndexForSuggestionsSummary {
  Text: string | undefined;
  BiasPosition?: number[] | undefined;
  FilterBBox?: number[] | undefined;
  FilterCountries?: string[] | undefined;
  MaxResults?: number | undefined;
  DataSource: string | undefined;
  Language?: string | undefined;
  FilterCategories?: string[] | undefined;
}
export interface SearchPlaceIndexForSuggestionsResponse {
  Summary: SearchPlaceIndexForSuggestionsSummary | undefined;
  Results: SearchForSuggestionsResult[] | undefined;
}
export interface SearchPlaceIndexForTextRequest {
  IndexName: string | undefined;
  Text: string | undefined;
  BiasPosition?: number[] | undefined;
  FilterBBox?: number[] | undefined;
  FilterCountries?: string[] | undefined;
  MaxResults?: number | undefined;
  Language?: string | undefined;
  FilterCategories?: string[] | undefined;
  Key?: string | undefined;
}
export interface SearchForTextResult {
  Place: Place | undefined;
  Distance?: number | undefined;
  Relevance?: number | undefined;
  PlaceId?: string | undefined;
}
export interface SearchPlaceIndexForTextSummary {
  Text: string | undefined;
  BiasPosition?: number[] | undefined;
  FilterBBox?: number[] | undefined;
  FilterCountries?: string[] | undefined;
  MaxResults?: number | undefined;
  ResultBBox?: number[] | undefined;
  DataSource: string | undefined;
  Language?: string | undefined;
  FilterCategories?: string[] | undefined;
}
export interface SearchPlaceIndexForTextResponse {
  Summary: SearchPlaceIndexForTextSummary | undefined;
  Results: SearchForTextResult[] | undefined;
}
export interface UpdatePlaceIndexRequest {
  IndexName: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  Description?: string | undefined;
  DataSourceConfiguration?: DataSourceConfiguration | undefined;
}
export interface UpdatePlaceIndexResponse {
  IndexName: string | undefined;
  IndexArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface UpdateRouteCalculatorRequest {
  CalculatorName: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  Description?: string | undefined;
}
export interface UpdateRouteCalculatorResponse {
  CalculatorName: string | undefined;
  CalculatorArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface UpdateTrackerRequest {
  TrackerName: string | undefined;
  PricingPlan?: PricingPlan | undefined;
  PricingPlanDataSource?: string | undefined;
  Description?: string | undefined;
  PositionFiltering?: PositionFiltering | undefined;
  EventBridgeEnabled?: boolean | undefined;
  KmsKeyEnableGeospatialQueries?: boolean | undefined;
}
export interface UpdateTrackerResponse {
  TrackerName: string | undefined;
  TrackerArn: string | undefined;
  UpdateTime: Date | undefined;
}
export interface VerifyDevicePositionRequest {
  TrackerName: string | undefined;
  DeviceState: DeviceState | undefined;
  DistanceUnit?: DistanceUnit | undefined;
}
export interface VerifyDevicePositionResponse {
  InferredState: InferredState | undefined;
  DeviceId: string | undefined;
  SampleTime: Date | undefined;
  ReceivedTime: Date | undefined;
  DistanceUnit: DistanceUnit | undefined;
}
export declare const ApiKeyRestrictionsFilterSensitiveLog: (
  obj: ApiKeyRestrictions
) => any;
export declare const CreateKeyRequestFilterSensitiveLog: (
  obj: CreateKeyRequest
) => any;
export declare const CreateKeyResponseFilterSensitiveLog: (
  obj: CreateKeyResponse
) => any;
export declare const DescribeKeyResponseFilterSensitiveLog: (
  obj: DescribeKeyResponse
) => any;
export declare const ListKeysResponseEntryFilterSensitiveLog: (
  obj: ListKeysResponseEntry
) => any;
export declare const ListKeysResponseFilterSensitiveLog: (
  obj: ListKeysResponse
) => any;
export declare const UpdateKeyRequestFilterSensitiveLog: (
  obj: UpdateKeyRequest
) => any;
export declare const UpdateKeyResponseFilterSensitiveLog: (
  obj: UpdateKeyResponse
) => any;
export declare const PositionalAccuracyFilterSensitiveLog: (
  obj: PositionalAccuracy
) => any;
export declare const DevicePositionUpdateFilterSensitiveLog: (
  obj: DevicePositionUpdate
) => any;
export declare const BatchEvaluateGeofencesRequestFilterSensitiveLog: (
  obj: BatchEvaluateGeofencesRequest
) => any;
export declare const BatchEvaluateGeofencesErrorFilterSensitiveLog: (
  obj: BatchEvaluateGeofencesError
) => any;
export declare const BatchEvaluateGeofencesResponseFilterSensitiveLog: (
  obj: BatchEvaluateGeofencesResponse
) => any;
export declare const DevicePositionFilterSensitiveLog: (
  obj: DevicePosition
) => any;
export declare const BatchGetDevicePositionResponseFilterSensitiveLog: (
  obj: BatchGetDevicePositionResponse
) => any;
export declare const CircleFilterSensitiveLog: (obj: Circle) => any;
export declare const GeofenceGeometryFilterSensitiveLog: (
  obj: GeofenceGeometry
) => any;
export declare const BatchPutGeofenceRequestEntryFilterSensitiveLog: (
  obj: BatchPutGeofenceRequestEntry
) => any;
export declare const BatchPutGeofenceRequestFilterSensitiveLog: (
  obj: BatchPutGeofenceRequest
) => any;
export declare const BatchPutGeofenceSuccessFilterSensitiveLog: (
  obj: BatchPutGeofenceSuccess
) => any;
export declare const BatchPutGeofenceResponseFilterSensitiveLog: (
  obj: BatchPutGeofenceResponse
) => any;
export declare const BatchUpdateDevicePositionRequestFilterSensitiveLog: (
  obj: BatchUpdateDevicePositionRequest
) => any;
export declare const BatchUpdateDevicePositionErrorFilterSensitiveLog: (
  obj: BatchUpdateDevicePositionError
) => any;
export declare const BatchUpdateDevicePositionResponseFilterSensitiveLog: (
  obj: BatchUpdateDevicePositionResponse
) => any;
export declare const CalculateRouteRequestFilterSensitiveLog: (
  obj: CalculateRouteRequest
) => any;
export declare const LegGeometryFilterSensitiveLog: (obj: LegGeometry) => any;
export declare const StepFilterSensitiveLog: (obj: Step) => any;
export declare const LegFilterSensitiveLog: (obj: Leg) => any;
export declare const CalculateRouteSummaryFilterSensitiveLog: (
  obj: CalculateRouteSummary
) => any;
export declare const CalculateRouteResponseFilterSensitiveLog: (
  obj: CalculateRouteResponse
) => any;
export declare const CalculateRouteMatrixRequestFilterSensitiveLog: (
  obj: CalculateRouteMatrixRequest
) => any;
export declare const CalculateRouteMatrixResponseFilterSensitiveLog: (
  obj: CalculateRouteMatrixResponse
) => any;
export declare const CreateGeofenceCollectionResponseFilterSensitiveLog: (
  obj: CreateGeofenceCollectionResponse
) => any;
export declare const MapConfigurationFilterSensitiveLog: (
  obj: MapConfiguration
) => any;
export declare const CreateMapRequestFilterSensitiveLog: (
  obj: CreateMapRequest
) => any;
export declare const CreateMapResponseFilterSensitiveLog: (
  obj: CreateMapResponse
) => any;
export declare const CreatePlaceIndexResponseFilterSensitiveLog: (
  obj: CreatePlaceIndexResponse
) => any;
export declare const CreateRouteCalculatorResponseFilterSensitiveLog: (
  obj: CreateRouteCalculatorResponse
) => any;
export declare const CreateTrackerResponseFilterSensitiveLog: (
  obj: CreateTrackerResponse
) => any;
export declare const DescribeGeofenceCollectionResponseFilterSensitiveLog: (
  obj: DescribeGeofenceCollectionResponse
) => any;
export declare const DescribeMapResponseFilterSensitiveLog: (
  obj: DescribeMapResponse
) => any;
export declare const DescribePlaceIndexResponseFilterSensitiveLog: (
  obj: DescribePlaceIndexResponse
) => any;
export declare const DescribeRouteCalculatorResponseFilterSensitiveLog: (
  obj: DescribeRouteCalculatorResponse
) => any;
export declare const DescribeTrackerResponseFilterSensitiveLog: (
  obj: DescribeTrackerResponse
) => any;
export declare const DeviceStateFilterSensitiveLog: (obj: DeviceState) => any;
export declare const ForecastedEventFilterSensitiveLog: (
  obj: ForecastedEvent
) => any;
export declare const ForecastGeofenceEventsDeviceStateFilterSensitiveLog: (
  obj: ForecastGeofenceEventsDeviceState
) => any;
export declare const ForecastGeofenceEventsRequestFilterSensitiveLog: (
  obj: ForecastGeofenceEventsRequest
) => any;
export declare const ForecastGeofenceEventsResponseFilterSensitiveLog: (
  obj: ForecastGeofenceEventsResponse
) => any;
export declare const GetGeofenceResponseFilterSensitiveLog: (
  obj: GetGeofenceResponse
) => any;
export declare const ListGeofenceCollectionsResponseEntryFilterSensitiveLog: (
  obj: ListGeofenceCollectionsResponseEntry
) => any;
export declare const ListGeofenceCollectionsResponseFilterSensitiveLog: (
  obj: ListGeofenceCollectionsResponse
) => any;
export declare const ListGeofenceResponseEntryFilterSensitiveLog: (
  obj: ListGeofenceResponseEntry
) => any;
export declare const ListGeofencesResponseFilterSensitiveLog: (
  obj: ListGeofencesResponse
) => any;
export declare const PutGeofenceRequestFilterSensitiveLog: (
  obj: PutGeofenceRequest
) => any;
export declare const PutGeofenceResponseFilterSensitiveLog: (
  obj: PutGeofenceResponse
) => any;
export declare const UpdateGeofenceCollectionResponseFilterSensitiveLog: (
  obj: UpdateGeofenceCollectionResponse
) => any;
export declare const GetDevicePositionResponseFilterSensitiveLog: (
  obj: GetDevicePositionResponse
) => any;
export declare const GetDevicePositionHistoryRequestFilterSensitiveLog: (
  obj: GetDevicePositionHistoryRequest
) => any;
export declare const GetDevicePositionHistoryResponseFilterSensitiveLog: (
  obj: GetDevicePositionHistoryResponse
) => any;
export declare const GetMapGlyphsRequestFilterSensitiveLog: (
  obj: GetMapGlyphsRequest
) => any;
export declare const GetMapSpritesRequestFilterSensitiveLog: (
  obj: GetMapSpritesRequest
) => any;
export declare const GetMapStyleDescriptorRequestFilterSensitiveLog: (
  obj: GetMapStyleDescriptorRequest
) => any;
export declare const GetMapTileRequestFilterSensitiveLog: (
  obj: GetMapTileRequest
) => any;
export declare const GetPlaceRequestFilterSensitiveLog: (
  obj: GetPlaceRequest
) => any;
export declare const PlaceGeometryFilterSensitiveLog: (
  obj: PlaceGeometry
) => any;
export declare const PlaceFilterSensitiveLog: (obj: Place) => any;
export declare const GetPlaceResponseFilterSensitiveLog: (
  obj: GetPlaceResponse
) => any;
export declare const InferredStateFilterSensitiveLog: (
  obj: InferredState
) => any;
export declare const TrackingFilterGeometryFilterSensitiveLog: (
  obj: TrackingFilterGeometry
) => any;
export declare const ListDevicePositionsRequestFilterSensitiveLog: (
  obj: ListDevicePositionsRequest
) => any;
export declare const ListDevicePositionsResponseEntryFilterSensitiveLog: (
  obj: ListDevicePositionsResponseEntry
) => any;
export declare const ListDevicePositionsResponseFilterSensitiveLog: (
  obj: ListDevicePositionsResponse
) => any;
export declare const ListMapsResponseEntryFilterSensitiveLog: (
  obj: ListMapsResponseEntry
) => any;
export declare const ListMapsResponseFilterSensitiveLog: (
  obj: ListMapsResponse
) => any;
export declare const ListPlaceIndexesResponseEntryFilterSensitiveLog: (
  obj: ListPlaceIndexesResponseEntry
) => any;
export declare const ListPlaceIndexesResponseFilterSensitiveLog: (
  obj: ListPlaceIndexesResponse
) => any;
export declare const ListRouteCalculatorsResponseEntryFilterSensitiveLog: (
  obj: ListRouteCalculatorsResponseEntry
) => any;
export declare const ListRouteCalculatorsResponseFilterSensitiveLog: (
  obj: ListRouteCalculatorsResponse
) => any;
export declare const ListTrackersResponseEntryFilterSensitiveLog: (
  obj: ListTrackersResponseEntry
) => any;
export declare const ListTrackersResponseFilterSensitiveLog: (
  obj: ListTrackersResponse
) => any;
export declare const MapConfigurationUpdateFilterSensitiveLog: (
  obj: MapConfigurationUpdate
) => any;
export declare const UpdateMapRequestFilterSensitiveLog: (
  obj: UpdateMapRequest
) => any;
export declare const UpdateMapResponseFilterSensitiveLog: (
  obj: UpdateMapResponse
) => any;
export declare const SearchPlaceIndexForPositionRequestFilterSensitiveLog: (
  obj: SearchPlaceIndexForPositionRequest
) => any;
export declare const SearchForPositionResultFilterSensitiveLog: (
  obj: SearchForPositionResult
) => any;
export declare const SearchPlaceIndexForPositionSummaryFilterSensitiveLog: (
  obj: SearchPlaceIndexForPositionSummary
) => any;
export declare const SearchPlaceIndexForPositionResponseFilterSensitiveLog: (
  obj: SearchPlaceIndexForPositionResponse
) => any;
export declare const SearchPlaceIndexForSuggestionsRequestFilterSensitiveLog: (
  obj: SearchPlaceIndexForSuggestionsRequest
) => any;
export declare const SearchPlaceIndexForSuggestionsSummaryFilterSensitiveLog: (
  obj: SearchPlaceIndexForSuggestionsSummary
) => any;
export declare const SearchPlaceIndexForSuggestionsResponseFilterSensitiveLog: (
  obj: SearchPlaceIndexForSuggestionsResponse
) => any;
export declare const SearchPlaceIndexForTextRequestFilterSensitiveLog: (
  obj: SearchPlaceIndexForTextRequest
) => any;
export declare const SearchForTextResultFilterSensitiveLog: (
  obj: SearchForTextResult
) => any;
export declare const SearchPlaceIndexForTextSummaryFilterSensitiveLog: (
  obj: SearchPlaceIndexForTextSummary
) => any;
export declare const SearchPlaceIndexForTextResponseFilterSensitiveLog: (
  obj: SearchPlaceIndexForTextResponse
) => any;
export declare const UpdatePlaceIndexResponseFilterSensitiveLog: (
  obj: UpdatePlaceIndexResponse
) => any;
export declare const UpdateRouteCalculatorResponseFilterSensitiveLog: (
  obj: UpdateRouteCalculatorResponse
) => any;
export declare const UpdateTrackerResponseFilterSensitiveLog: (
  obj: UpdateTrackerResponse
) => any;
export declare const VerifyDevicePositionRequestFilterSensitiveLog: (
  obj: VerifyDevicePositionRequest
) => any;
export declare const VerifyDevicePositionResponseFilterSensitiveLog: (
  obj: VerifyDevicePositionResponse
) => any;
